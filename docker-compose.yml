version: '3.9'
services:
  backend:
    build:
      context: ./ERAS-BE
      dockerfile: ./src/Eras.Api/Dockerfile
    ports:
      - "${BACKEND_PORT}:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:8080
    volumes:
      - /app/node_modules
    depends_on:
      database:
        condition: service_healthy
    networks:
      - eras_network

  frontend:
    build:
      context: ./ERAS-FE
    ports:
      - "${FRONTEND_PORT}:80"
    volumes:
      - ./ERAS-FE:/app
    depends_on:
      - backend
    networks:
      - eras_network

  database:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - eras_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U eras_user -d eras_db || exit 1"]
      interval: ${POSTGRES_HEALTHCHECK_INTERVAL}
      timeout: ${POSTGRES_HEALTHCHECK_TIMEOUT}
      retries: ${POSTGRES_HEALTHCHECK_RETRIES}
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  eras_network:
